@Library('conservify') _

properties([
    disableConcurrentBuilds(),
    pipelineTriggers([githubPush()]),
    buildDiscarder(logRotator(numToKeepStr: '5'))
])

timestamps {
    node ("jenkins-aws-ubuntu") {
        try {
            def scmInfo

            stage ('prepare') {
                sh "flutter --disable-telemetry"
                sh "yes 'y' | flutter doctor --android-licenses"

                scmInfo = checkout scm

                dir ("rustfk") {
                    git branch: 'main', url: 'https://github.com/fieldkit/rustfk.git'    
                }
            }

            stage ('build') {
                sh "cp ~/.gradle/gradle.properties /tmp && rm -rf ~/.gradle && mkdir -p ~/.gradle && cp /tmp/gradle.properties ~/.gradle"

                sh "echo '# Defaults' > .env"
                sh "flutter clean"
                sh "flutter build apk"

                archiveArtifacts artifacts: 'build/app/outputs/flutter-apk/*.apk'
            }

            refreshDistribution()

            notifySuccess()
        }
        catch (Exception e) {
            notifyFailure()
            throw e;
        }
    }
}
