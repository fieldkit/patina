stages:
  - test
  - build

image: "ghcr.io/cirruslabs/flutter:3.10.5"

before_script:
  # TODO Ugly
  - git clone https://gitlab.com/fieldkit/libraries/rustfk.git
  # BEGIN Rust
  - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup.sh
  - sh rustup.sh -y
  - export PATH="$HOME/.cargo/bin:$PATH"
  - rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android
  - cargo install cargo-ndk
  # END Rust
  - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash

test:
  stage: test
  script:
    - echo "ok"

build:android:
  stage: build
  script:
    # BEGIN Java NDK
    - yes | sdkmanager 'ndk;25.2.9519653' && echo no-idea-why-this-is-needed
    - mkdir -p ~/.gradle
    - echo "ANDROID_NDK=$ANDROID_SDK_ROOT/ndk" >> ~/.gradle/gradle.properties
    # END Java NDK
    - echo '# Defaults' > .env
    - flutter build apk
  artifacts:
    name: "fk-patina-${CI_BUILD_REF_NAME}-${CI_BUILD_ID}"
    paths:
      - build/app/outputs/flutter-apk/*.apk

build:ios:
  stage: build
  tags:
    - mac-lab
  script:
    # BEGIN Signing
    - export KEYCHAIN_PASSWORD=`cat .secure_files/secure-lab-mac-keychain-pw.txt`
    - security find-identity -p codesigning
    - security list-keychains
    - security unlock-keychain -p ${KEYCHAIN_PASSWORD} login.keychain
    - security show-keychain-info login.keychain || true
    # END Signing
    - echo '# Defaults' > .env
    - export PATH=~/tools/flutter/bin:$PATH
    - flutter clean
    - flutter build ipa --export-method ad-hoc
  artifacts:
    name: "fk-patina-${CI_BUILD_REF_NAME}-${CI_BUILD_ID}"
    paths:
      - build/ios/ipa/*
