stages:
  - prepare
  - test
  - build

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

prepare:image:
  stage: prepare
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
    DOCKER_CLI_EXPERIMENTAL: enabled
  script:
    - echo $IMAGE_TAG
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker manifest inspect $IMAGE_TAG || true
    - |
      if ! docker manifest inspect $IMAGE_TAG; then
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG
      fi

test:
  stage: test
  needs: [prepare:image]
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  image: $IMAGE_TAG
  script:
    - git clone https://gitlab.com/fieldkit/libraries/rustfk.git
    - flutter test

build:android:
  stage: build
  needs: [test]
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  image: $IMAGE_TAG
  script:
    - git clone https://gitlab.com/fieldkit/libraries/rustfk.git
    - flutter build apk && sccache --show-stats
  artifacts:
    name: "fk-patina-${CI_BUILD_REF_NAME}-${CI_BUILD_ID}"
    paths:
      - build/app/outputs/flutter-apk/*.apk

.setup: &common
  image: "ghcr.io/cirruslabs/flutter:3.13.0"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    # BEGIN Rust
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup.sh
    - sh rustup.sh -y
    - export PATH="$HOME/.cargo/bin:$PATH"
    - rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android
    - cargo install cargo-ndk
    # END Rust

build:ios:
  <<: *common
  stage: build
  needs: [test]
  tags:
    - mac-lab
  script:
    - git clone https://gitlab.com/fieldkit/libraries/rustfk.git
    # BEGIN Signing
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
    - export KEYCHAIN_PASSWORD=`cat .secure_files/secure-lab-mac-keychain-pw.txt`
    - security find-identity -p codesigning
    - security list-keychains
    - security unlock-keychain -p ${KEYCHAIN_PASSWORD} login.keychain
    - security show-keychain-info login.keychain || true
    # END Signing
    - echo '# Defaults' > .env
    - export PATH=~/tools/flutter/bin:$PATH
    - flutter clean
    - flutter build ipa --export-method ad-hoc
  artifacts:
    name: "fk-patina-${CI_BUILD_REF_NAME}-${CI_BUILD_ID}"
    paths:
      - build/ios/ipa/*
